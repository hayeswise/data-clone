/*
 MIT
 @see {@link https://github.com/hayeswise/data-clone}
*/
var WISE=WISE||{};
WISE.dataClone=function(){function b(a,f,c){var d=a,g;if("number"!==typeof b.MAX_DEPTH||1>b.MAX_DEPTH)console.warn("Invalid value for dataClone.MAX_DEPTH ("+b.MAX_DEPTH+"). Will use the default value."),b.MAX_DEPTH=5;void 0===c?(c=new Map,g=b.SELF,c.set(a,g)):g=c.get(a);if(!f||1>f)f=1;if(f>b.MAX_DEPTH)if(void 0!==a&&"object"===typeof a)switch(Object.prototype.toString.call(a)){case "[object Date]":return a.toISOString();case "[object RegExp]":return a.toString();case "[object Error]":return{name:a.name,message:a.message};
default:return b.OBJECT_REFERENCE_FORMAT.replace("%s",c.get(a))}else return a;if(a&&"object"===typeof a)switch(Object.prototype.toString.call(a)){case "[object Date]":d=a.toISOString();break;case "[object RegExp]":d=a.toString();break;case "[object Error]":d={name:a.name,message:a.message};break;default:d="[object Array]"===Object.prototype.toString.call(a)?[]:Object.create(null),g=Object.keys(a),g.forEach(function(e){b.IGNORE_TYPES.some(function(a){return a===typeof d[e]})||b.IGNORE_PROPERTY_NAMES.some(function(a){return(new RegExp(a)).test(e)})||
(c.has(a[e])||c.set(a[e],c.get(a)+"."+e),d[e]=b(a[e],f+1,c))})}return d}b.MAX_DEPTH=4;b.IGNORE_TYPES=["function"];b.IGNORE_PROPERTY_NAMES=[/^_/];b.OBJECT_REFERENCE_FORMAT="{object:%s}";b.SELF="self";return b}();
